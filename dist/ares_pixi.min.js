var ares;(function(ares){var utils;(function(utils){function createEvalFunc(exp){return Function("scope","with(scope){return "+exp+"}")}utils.createEvalFunc=createEvalFunc;function evalExp(exp,scope){return createEvalFunc(exp)(scope)}utils.evalExp=evalExp;function createRunFunc(exp){return Function("scope","with(scope){"+exp+"}")}utils.createRunFunc=createRunFunc;function runExp(exp,scope){createRunFunc(exp)(scope)}utils.runExp=runExp})(utils=ares.utils||(ares.utils={}))})(ares||(ares={}));var ares;(function(ares){var pixijs;(function(pixijs){function textContent(context){context.entity.createWatcher(context.exp,context.scope,function(value){var text=context.target;text.text=value})}pixijs.textContent=textContent;pixijs.commands={prop:function(context){var target=context.target;context.entity.createWatcher(context.exp,context.scope,function(value){if(context.subCmd!=""){target[context.subCmd]=value}else{for(var name in value){target[name]=value[name]}}})},on:function(context){if(context.subCmd!=""){var handler=context.scope[context.exp]||window[context.exp];if(typeof handler=="function"){context.target.on(context.subCmd,handler,context.scope)}else{context.target.on(context.subCmd,function(evt){var scope=Object.create(context.scope);scope.$event=evt;ares.utils.runExp(context.exp,scope)})}}},"if":function(context){var compiled=false;var refNode=new PIXI.DisplayObject;refNode.interactive=refNode.interactiveChildren=false;var parent=context.target.parent;var index=parent.getChildIndex(context.target);parent.addChildAt(refNode,index);context.entity.createWatcher(context.exp,context.scope,function(value){if(value==true){if(!compiled){context.compiler.compile(context.target,context.scope);compiled=true}if(!context.target.parent){var index=refNode.parent.getChildIndex(refNode);refNode.parent.addChildAt(context.target,index)}}else{if(context.target.parent){context.target.parent.removeChild(context.target)}}})},"for":function(context){var reg=/^\s*(\S+)\s+in\s+(\S+)\s*$/;var res=reg.exec(context.exp);if(!res){console.error("for命令表达式错误："+context.exp);return}var itemName=res[1];var arrName=res[2];var parent=context.target.parent;var sNode=new PIXI.DisplayObject;sNode.interactive=sNode.interactiveChildren=false;var eNode=new PIXI.DisplayObject;eNode.interactive=eNode.interactiveChildren=false;var index=parent.getChildIndex(context.target);parent.addChildAt(sNode,index);parent.addChildAt(eNode,index+1);parent.removeChild(context.target);context.entity.createWatcher(arrName,context.scope,function(value){var bIndex=parent.getChildIndex(sNode);var eIndex=parent.getChildIndex(eNode);for(var i=bIndex+1;i<eIndex;i++){parent.removeChildAt(i).destroy()}if(typeof value=="number"){var temp=[];for(var i=0;i<value;i++){temp.push(i)}value=temp}var curIndex=0;for(var key in value){var newNode=cloneObject(context.target);parent.addChildAt(newNode,bIndex+1+curIndex);var newScope=Object.create(context.scope);newScope.$index=key;newScope[itemName]=value[key];context.compiler.compile(newNode,newScope);curIndex++}})}};function cloneObject(target){if(target instanceof PIXI.Text){var temp=new PIXI.Text;temp.style=cloneObject(target["style"]);temp.text=target["text"];var keys=Object.keys(target);for(var i in keys){var key=keys[i];if(key.indexOf("a-")==0||key.indexOf("a_")==0){temp[key]=target[key]}}return temp}if(typeof target["clone"]=="function")return target["clone"]();var cls=target.constructor||Object;try{var result=new cls}catch(err){return null}var keys=Object.keys(target);for(var i in keys){var key=keys[i];if(key=="parent")continue;if(key=="children"){var children=target["children"];for(var j in children){var child=cloneObject(children[j]);result["addChild"](child)}}else{var value=target[key];if(value&&typeof value=="object"){value=cloneObject(value)}if(value!==null)result[key]=value}}return result}})(pixijs=ares.pixijs||(ares.pixijs={}))})(ares||(ares={}));var ares;(function(ares){var pixijs;(function(pixijs){var PIXICompiler=function(){function PIXICompiler(root,config){this._nameDict={};this._root=root;this._config=config}PIXICompiler.prototype.init=function(entity){this._entity=entity;this.compile(this._root,entity.data)};PIXICompiler.prototype.compile=function(node,scope){var hasLazyCompile=false;var name=node.name;if(name)this._nameDict[name]=node;var keys=[];for(var t in node){if(t.indexOf("a-")==0||t.indexOf("a_")==0){keys.push(t)}}var conf=this._config&&this._config[name];for(var t in conf){if(t.indexOf("a-")!=0&&t.indexOf("a_")!=0)t="a-"+t;keys.push(t)}var cmdsToCompile=[];for(var i=0,len=keys.length;i<len;i++){var key=keys[i];var bIndex=2;var eIndex=key.indexOf(":");if(eIndex<0)eIndex=key.indexOf("$");if(eIndex<0)eIndex=key.length;var cmdName=key.substring(bIndex,eIndex);var exp;if(conf)exp=conf[key]||conf[cmdName]||node[key];else exp=node[key];var subCmd=key.substr(eIndex+1);var cmd=pixijs.commands[cmdName];if(!cmd){cmd=pixijs.commands["prop"];subCmd=cmdName||""}cmdsToCompile.push({propName:key,cmd:cmd,ctx:{scope:scope,target:node,subCmd:subCmd,exp:exp,compiler:this,entity:this._entity}});if(cmdName=="if"||cmdName=="for"){hasLazyCompile=true;cmdsToCompile.splice(0,cmdsToCompile.length-1);break}}for(var i=0,len=cmdsToCompile.length;i<len;i++){var cmdToCompile=cmdsToCompile[i];delete cmdToCompile.ctx.target[cmdToCompile.propName];cmdToCompile.cmd(cmdToCompile.ctx)}if(!hasLazyCompile){if(node instanceof PIXI.Text){this.compileTextContent(node,scope)}if(node instanceof PIXI.Container){var children=node.children;for(var i=0;i<children.length;i++){var child=children[i];this.compile(child,scope)}}}};PIXICompiler.prototype.compileTextContent=function(text,scope){var value=text.text;if(PIXICompiler._textExpReg.test(value)){var exp=this.parseTextExp(value);pixijs.textContent({scope:scope,target:text,subCmd:"",exp:exp,compiler:this,entity:this._entity})}};PIXICompiler.prototype.parseTextExp=function(exp){var reg=PIXICompiler._textExpReg;for(var result=reg.exec(exp);result!=null;result=reg.exec(exp)){exp=result[1]+"${"+result[2]+"}"+result[3]}return"`"+exp+"`"};PIXICompiler._textExpReg=/(.*?)\{\{(.*?)\}\}(.*)/;return PIXICompiler}();pixijs.PIXICompiler=PIXICompiler})(pixijs=ares.pixijs||(ares.pixijs={}))})(ares||(ares={}));